# Build

name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: R ${{ matrix.config.r }} | GeoNetwork ${{ matrix.config.geonetwork }} | ${{ matrix.config.os }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - {os: ubuntu-20.04,   r: '4.0.5',  geonetwork: '3.10.7', rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}
          
    env:
      GN_VERSION: ${{ matrix.config.geonetwork }}
  
    steps:
      - uses: actions/checkout@v2
      #Docker GeoNetwork set-up (GN < 4)
      - name: Set up GeoNetwork ${{ matrix.config.geonetwork }}
        if: ${{ !startsWith( matrix.config.geonetwork, '4' ) }}
        run: |
          docker run |
          -v ./tests/resources/config-view-service-override.xml:/etc/geonetwork/config-view-service-override.xml |
          -d -p "8080:8080" |
          geonetwork:${{ matrix.config.geonetwork }}
          bash -c 'export CATALINA_OPTS="$CATALINA_OPTS -Dgeonetwork.jeeves.configuration.overrides.file=/etc/geonetwork/config-view-service-override.xml";/entrypoint.sh catalina.sh run'
      #R Set-up
      - name: Set up R ${{ matrix.config.r }}
        uses: r-lib/actions/setup-r@v1
        with:
          r-version: ${{ matrix.config.r }}
      #Install dependencies
      - name: Install dependencies
        uses: r-lib/actions/setup-r-dependencies@v1
        with:
          extra-packages: covr
      #Test code coverage
      - name: Test code coverage
        run: covr::codecov()
        shell: Rscript {0}
      #Check R Package
      - name: Check R package
        uses: r-lib/actions/check-r-package@check-r-package
        with:
          artifact-name: geonapi_r-${{ matrix.config.r }}_geonetwork-${{matrix.config.geonetwork}}_${{ matrix.config.os }}-results
